// Generated by CoffeeScript 1.6.1
'use strict';
var App;

App = (function() {

  App.detailsURL = /^#employees\/(\d+)/;

  App.showAlert = function(message, title) {
    if (navigator.notification) {
      return navigator.notification.alert(message, null, title, "OK");
    } else {
      return alert((title ? "" + title + ": " + message : message));
    }
  };

  function App() {
    var _this = this;
    this.route = function() {
      var hash, match;
      hash = window.location.hash;
      if (!hash) {
        if (_this.homePage) {
          _this.slidePage(_this.homePage, true);
        } else {
          _this.homePage = new HomeView(_this.store).render(true);
          _this.currentPage = _this.homePage;
          $('body').append(_this.homePage.el);
        }
        return;
      }
      match = hash.match(App.detailsURL);
      if (match) {
        return _this.store.findById(Number(match[1]), function(employee) {
          return _this.slidePage(new EmployeeView(employee).render());
        });
      }
    };
    this.registerEvents = function() {
      var $body, event_begin, event_end, tappable, touchable;
      tappable = 'tappable-active';
      touchable = document.documentElement.hasOwnProperty('ontouchstart');
      event_begin = touchable ? 'touchstart' : 'mousedown';
      event_end = touchable ? 'touchend' : 'mouseup';
      $body = $('body');
      $body.on(event_begin, 'a', function(event) {
        return $(event.target).addClass(tappable);
      });
      $body.on(event_end, 'a', function(event) {
        return $(event.target).removeClass(tappable);
      });
      return $(window).on('hashchange', $.proxy(this.route, this));
    };
    this.registerEvents();
    this.slidePage = function(page, clear) {
      var $el, options;
      if (clear == null) {
        clear = false;
      }
      $el = $(page.el);
      if (page !== _this.homePage) {
        $el.css({
          left: '100%'
        });
        $el.appendTo('body');
        $el.swipe({
          threshold: 0,
          swipe: function(event, direction, distance, duration, fingers) {
            if (direction === 'right') {
              return document.location.hash = '#';
            }
          }
        });
      }
      options = {
        duration: 300,
        complete: function() {
          if (clear) {
            $('.page:not(.homePage)').remove();
          }
          return _this.currentPage = page;
        }
      };
      return setTimeout(function() {
        return $('html,body').scrollTo($el, $el, {
          animation: options
        });
      }, 300);
    };
    this.store = new MemoryStore(function() {
      return _this.route();
    });
  }

  return App;

})();
